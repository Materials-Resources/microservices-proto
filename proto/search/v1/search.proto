edition = "2023";

package search.v1;

import "google/protobuf/go_features.proto";
option features.(pb.go).api_level = API_OPAQUE;


// Pagination and Facet Metadata
message PageMetadata {
  int32 total_records = 1; // Total results across all pages
  int32 current_page = 2;  // Current page being viewed
  int32 total_pages = 3;   // Total number of pages available
}

// Represents a single aggregation result in a bucket
message BucketAggregation {
  string name = 1;   // The name or value of the aggregated item
  int32 count = 2;   // The count or frequency of this item
}

message TermsAggregation {
  string FieldName = 1;
  repeated BucketAggregation buckets = 2; // List of buckets for this term aggregation
}

message Aggregation {
  oneof aggregation_type {
    TermsAggregation terms_aggregation = 1;
  }
}


message Filter {
  repeated string values = 1;
}


message Product {
  string id = 1;
  string sn = 2;
  string name = 3;
  string description = 4;
  string product_group_name = 5;
}


service SearchService {
  // SearchProducts returns a list of products based on the search query and filters
  rpc SearchProducts(SearchProductsRequest) returns (SearchProductsResponse);
  // AddProduct indexes a new product to the search engine
  rpc AddProduct(AddProductRequest) returns (AddProductResponse);
}

// Request and Response Definitions for RPCs
message SearchProductsRequest {
  string query = 1;                // Search query
  int32 page = 2;                  // Page number (1-indexed)
  string sort_by = 3;              // Optional sort parameter
  map<string, Filter> filters = 4;               // Optional filters
}

message SearchProductsResponse {
  repeated Product products = 1;
  PageMetadata page_metadata = 2;
  repeated Aggregation aggregations = 3;
}

message AddProductRequest {
  repeated Product products = 1;
}

message AddProductResponse {
  int32 success = 1;
}

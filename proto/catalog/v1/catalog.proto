syntax = 'proto3';

import "google/protobuf/field_mask.proto";

package catalog.v1;

option go_package = "golang/catalog";

enum DeleteMode {
  DELETE_MODE_UNSPECIFIED = 0;
  DELETE_MODE_SOFT = 1;
  DELETE_MODE_HARD = 2;
}

message ValidationError {
  string field = 1;
  string message = 2;
}

message Cursor {
  int64 select = 1;
  int64 size = 2;
}

message ProductDetail {
  string uid = 7;
  int32 id = 1[deprecated=true];
  string sn = 2;
  string name = 3;
  string description = 4;
  double stock_qty = 5;
  string product_group_sn = 6;
}

message ProductSupplier {
  string product_id = 1;
  string supplier_id = 2;
  string supplier_sn = 3;
  double list_price = 4;
  double purchase_price = 5;
  bool delete = 6;
}

message Product {
  string uid = 1;
  string sn = 2;
  string name = 3;
  string description = 4;
  string product_group_id = 5;
}

message ProductGroup {
  string sn = 1;
  string name = 2;
}

message ProductFilter {
  string product_group_id = 1;
}

service CatalogService {
  // CustomerGetProduct returns a product for a customer
  rpc CustomerGetProduct(CustomerGetProductRequest) returns (CustomerGetProductResponse);

  // ClerkListGroups returns a List of product groups
  rpc ClerkListGroups(ClerkListGroupRequest) returns (ClerkListGroupResponse);
  // ClerkCreateGroup creates a new product group
  rpc ClerkCreateGroup(ClerkCreateGroupRequest) returns (ClerkCreateGroupResponse);
  // ClerkReadGroup returns a product group with products
  rpc ClerkReadGroup(ClerkReadGroupRequest) returns (ClerkReadGroupResponse);
  // ClerkUpdateGroup updates a product group
  rpc ClerkUpdateGroup(ClerkUpdateGroupRequest) returns (ClerkUpdateGroupResponse);
  // ClerkDeleteGroup deletes a product group
  rpc ClerkDeleteGroup(ClerkDeleteGroupRequest) returns (ClerkDeleteGroupResponse);


  // ListProducts returns a List of products
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
  // GetProduct returns a single product
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
  // CreateProduct creates a product
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  // UpdateProduct updates a product
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
  // DeleteProduct deletes a product
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
  // GetBasicProductDetails returns a List of basic product details
  rpc GetBasicProductDetails(GetBasicProductDetailsRequest) returns (GetBasicProductDetailsResponse);

  // ListSuppliers returns a List of suppliers for a product
  rpc ListSuppliers(ListSuppliersRequest) returns (ListSuppliersResponse);
  // GetSupplier returns the supplier of a product
  rpc GetSupplier(GetSupplierRequest) returns (GetSupplierResponse);
  // CreateSupplier creates a supplier for a product
  rpc CreateSupplier(CreateSupplierRequest) returns (CreateSupplierResponse);
  // UpdateSupplier updates a supplier for a product
  rpc UpdateSupplier(UpdateSupplierRequest) returns (UpdateSupplierResponse);
  // SetPrimarySupplier sets the primary supplier for a product
  rpc SetPrimarySupplier(SetPrimarySupplierRequest) returns (SetPrimarySupplierResponse);


  // GetProductBySupplier returns a product by supplier identifiers
  rpc GetProductBySupplier(GetProductBySupplierRequest) returns (GetProductBySupplierResponse);


}

message ClerkListGroupRequest {}
message ClerkListGroupResponse {
  repeated ProductGroup product_groups = 1;
}
message ClerkCreateGroupRequest {
  string sn = 1;
  string name = 2;
}

message ClerkCreateGroupResponse {
  repeated ValidationError validation_errors = 1;
}

message ClerkReadGroupRequest {
  string sn = 1;
}
message ClerkReadGroupResponse {
  ProductGroup product_group = 1;
}

message ClerkUpdateGroupRequest {
  message ProductGroup {
    string name = 1;
  }
  string sn = 1;
  ProductGroup product_group = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message ClerkUpdateGroupResponse {
  repeated ValidationError validation_errors = 1;
}

message ClerkDeleteGroupRequest {
  string sn = 1;
  DeleteMode delete_mode = 2;
}
message ClerkDeleteGroupResponse {}


message GetSupplierRequest {
  string product_id = 1;
  string supplier_id = 2;
}

message ListProductsRequest {
  int32 cursor = 1;
}
message ListProductsResponse {
  repeated ProductDetail products = 1;
  int32 next_cursor = 2;
}

message GetProductRequest {
  int32 id = 1 [deprecated=true];
  string uid = 2;
}
message GetProductResponse {
  ProductDetail product = 1 [deprecated=true];
  string uid = 2;
  string sn = 3;
  string name = 4;
  string description = 5;
  string product_group_id = 6;
  string product_group_name = 7;
}


message CreateProductRequest {
  string id = 1;
  string description = 2;
  string extended_description = 3;
  float list_price = 4;
  string product_group_id = 8;
  string upc = 9;
  string supplier_id = 10;
  string supplier_part_no = 11;
  float cost = 12;
}
message CreateProductResponse {
  repeated ValidationError validation_errors = 1;
}


message UpdateProductRequest {
  ProductDetail product = 1;
}
message UpdateProductResponse {}

message DeleteProductRequest {
  int32 uid = 1;
}
message DeleteProductResponse {

}

message GetBasicProductDetailsRequest{
  repeated int32 product_uid = 1;
}
message GetBasicProductDetailsResponse {
  message BasicProductDetail {
    int32 product_uid = 1[deprecated=true];
    string uid = 5;
    string sn = 2;
    string name = 3;
    string description = 4;
  }
  repeated BasicProductDetail basic_product_details = 1;
}


message ListSuppliersRequest {}
message ListSuppliersResponse {
  repeated ProductSupplier product_suppliers = 1;
}


message GetSupplierResponse{
  ProductSupplier product_supplier = 1;
}

message CreateSupplierRequest {
  string product_id = 1;
  string supplier_id = 2;
  string supplier_product_sn = 3;
  double list_price = 4;
  double purchase_price = 5;
}
message CreateSupplierResponse {}


message UpdateSupplierRequest {
  ProductSupplier product_supplier = 1;

  google.protobuf.FieldMask update_mask = 2;

}
message UpdateSupplierResponse {}

message SetPrimarySupplierRequest {
  int32 product_uid = 1;
  double location_id = 2;
  double supplier_id = 3;
  double division_id = 4;
}
message SetPrimarySupplierResponse {}


message CreateProductGroupRequest {
  ProductGroup product_group = 1;
  //  string sn = 1; //Unique identifier of Product Group
  //  string name = 2; // Description of group
}
message CreateProductGroupResponse {
  repeated ValidationError validation_errors = 1;
}

message UpdateProductGroupRequest {
  ProductGroup product_group = 1;
}
message UpdateProductGroupResponse {}

message GetProductBySupplierRequest {
  double supplier_id = 1;
  string supplier_part_no = 2;
}
message GetProductBySupplierResponse {
  string sn = 1;
}

message CustomerGetProductRequest {
  string product_uid = 1; // Unique identifier of product
}

message CustomerGetProductResponse {
  Product product = 1; // Common product details
}
